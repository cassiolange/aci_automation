---
#- import_playbook: update.yml

- name : DHCP
  gather_facts: false
  hosts: all
  tasks:
    - name: DHCP Relay Policy and Relay Provider
      cisco.mso.ndo_tenant_policies_dhcp_relay_policy:
        dhcp_relay_policy_name: "{{ item.dhcp_relay_policy }}"
        template: "{{ item.template }}"
        description: "{{ item.description if item.description is defined and item.description != '' else omit }}"
        epg:
          name: "{{ item.epg if item.epg is defined and item.epg != '' else omit }}"
          anp: "{{ item.anp if item.anp is defined and item.anp != '' else omit }}"
          template: "{{ item.epg_template if item.epg_template is defined and item.epg_template != '' else omit }}"
          schema: "{{ item.epg_schema if item.epg_schema is defined and item.epg_schema != '' else omit }}"
        external_epg:
          name: "{{ item.external_epg if item.external_epg is defined and item.external_epg != '' else omit }}"
          template: "{{ item.external_epg_template if item.external_epg_template is defined and item.external_epg_template != '' else omit }}"
          schema: "{{ item.external_epg_schema if item.external_epg_schema is defined and item.external_epg_schema != '' else omit }}"
        ip: "{{ item.ip }}"
        use_server_vrf: "{{ item.use_server_vrf if item.use_server_vrf is defined and item.use_server_vrf != '' else omit }}"
        state: "{{ item.status if item.status is defined and item.status != '' else omit }}"
      loop: "{{ dhcp_relay_policy_provider }}"
      when: dhcp_relay_policy_provider is defined

    - name: Add a new DHCP policy to a BD
      cisco.mso.ndo_schema_template_bd_dhcp_policy:
        schema: "{{ item.schema }}"
        template: "{{ item.template }}"
        bd: "{{ item.bridge_domain }}"
        dhcp_policy:
          name: "{{ item.dhcp_relay_policy }}"
          template: "{{ item.dhcp_relay_policy_template }}"
#        dhcp_option_policy:
#          name: "{{ item.dhcp_relay_option if item.dhcp_relay_option is defined and item.dhcp_relay_option != '' else omit }}"
        state: "{{ item.status if item.status is defined and item.status != '' else omit }}"
      loop: "{{ bd_dhcp }}"
      when: bd_dhcp is defined
