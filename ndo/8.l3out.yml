---
- ansible.builtin.import_playbook: update.yml

- name : L3Outs
  gather_facts: false
  hosts: all

  tasks:
    - name: Tenant L3Out Template
      cisco.mso.ndo_tenant_l3out_template:
        template: "{{ item.name }}"
        site: "{{ item.site }}"
        tenant: "{{ item.tenant }}"
        state: "{{ item.status if item.status is defined and item.status != '' else omit }}"
      loop: "{{ tenant_l3out_template }}"
      when: tenant_l3out_template is defined


#    - name: Add a new L3out
#      cisco.mso.mso_schema_template_l3out:
#        schema: "{{ item.schema }}"
#        template: "{{ item.template }}"
#        l3out: "{{ item.name }}"
#        vrf:
#          name: "{{ item.vrf }}"
#          template: "{{ item.vrf_template }}"
#          schema: "{{ item.vrf_schema }}"
#        state: "{{ item.status if item.status is defined and item.status != '' else omit }}"
#      loop: "{{ l3out }}"
#      when: l3out is defined
#
#    - name: Add a new external EPG (Non Stretched)
#      cisco.mso.mso_schema_template_external_epg:
#        external_epg: "{{ item.name }}"
#        schema: "{{ item.schema }}"
#        template: "{{ item.template }}"
#        l3out:
#          name: "{{ item.l3out }}"
#          schema: "{{ item.l3out_schema }}"
#          template: "{{ item.l3out_template }}"
#        vrf:
#          name: "{{ item.vrf }}"
#          schema: "{{ item.vrf_schema }}"
#          template: "{{ item.vrf_template }}"
#        state: "{{ item.status if item.status is defined and item.status != '' else omit }}"
#      loop: "{{ external_epg }}"
#      when: external_epg is defined and item.site is defined and item.site !=""
#
#    - name: Add a new external EPG (Stretched)
#      cisco.mso.mso_schema_template_external_epg:
#        external_epg: "{{ item.name }}"
#        schema: "{{ item.schema }}"
#        template: "{{ item.template }}"
#        vrf:
#          name: "{{ item.vrf_name }}"
#          schema: "{{ item.vrf_schema }}"
#          template: "{{ item.vrf_template }}"
#        state: "{{ item.status if item.status is defined and item.status != '' else omit }}"
#      loop: "{{ external_epg }}"
#      when: external_epg is defined and item.site is defined and item.site ==""
#
#
##    - name: Bind Stretched External EPG to a Site L3Out
##      cisco.mso.mso_schema_site_external_epg:
##        schema: "{{ item.schema  }}"
##        template: "{{ item.template }}"
##        external_epg: "{{ item.name }}"
##        l3out: "{{ item.l3out_name }}"
###          name:
###          template: "{{ item.l3out_template_name }}"
###          schema: "{{ item.l3out_schema_name }}"
##        site: "{{ item.site_name }}"
##        state: "{{ item.status if item.status is defined else omit }}"
##      loop: "{{ external_epg_to_l3out }}"
##      when: external_epg_to_l3out is defined
#
#    - name: Add a new subnet to an External EPG
#      cisco.mso.mso_schema_template_external_epg_subnet:
#        schema: "{{ item.schema }}"
#        template: "{{ item.template }}"
#        external_epg: "{{ item.name }}"
#        subnet: "{{ item.subnet }}"
#        scope: "{{ ['import-security' if item.external_subnet_for_external_epg is defined and item.external_subnet_for_external_epg == 'yes', 'export-rtctrl' if item.export_route_control is defined and item.export_route_control == 'yes', 'shared-rtctrl' if item.shared_route_control is defined and item.shared_route_control == 'yes', 'import-rtctrl' if item.import_route_control is defined and item.import_route_control == 'yes', 'shared-security' if item.shared_security is defined and item.shared_security == 'yes'] | reject('undefined') | join(',') | default('import-security',true)}}"
#        aggregate: "{{ 'shared-rtctrl' if item.aggregate_shared_routes is defined and item.aggregate_shared_routes == 'yes' else omit }}"
#        state: "{{ item.status if item.status is defined and item.status != '' else omit }}"
#      loop: "{{ external_epg_subnet }}"
#      when: external_epg_subnet is defined
#
#    - name: Bind BD to l3out
#      cisco.mso.mso_schema_site_bd_l3out:
#        schema: "{{ item.schema }}"
#        template: "{{ item.template }}"
#        site: "{{ item.site }}"
#        bd: "{{ item.bridge_domain }}"
#        l3out:
#          name: "{{ item.l3out }}"
#          schema: "{{ item.l3out_schema }}"
#          template: "{{ item.template }}"
#        state: "{{ item.status if item.status is defined and item.status != '' else omit }}"
#      loop: "{{ bridge_domain_to_l3out }}"
#      when: bridge_domain_to_l3out is defined


